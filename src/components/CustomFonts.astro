---
import ControlBox from "./ControlBox.svelte";
---

<ControlBox client:only id="inputContainer" buttonLabel="Change font">
  <label for="fontLinkInput"
    >Paste your Google Fonts code below. For help, see <a href="/help#fonts"
      >Adding fonts</a
    >.</label
  >
  <textarea id="fontLinkInput" rows="3" cols="60"></textarea>
</ControlBox>

<script>
  // Load saved fonts
  window.addEventListener("DOMContentLoaded", () => {
    const savedFontLink = localStorage.getItem("googleFontLink");
    if (savedFontLink) {
      // Put it into the textarea for display
      document.getElementById("fontLinkInput").value = savedFontLink;

      // Inject it into the page
      injectFontLinkFromHTML(savedFontLink);
    }
  });

  // Get input container
  const container = document.getElementById("inputContainer");

  // Get the textarea
  const textarea = document.getElementById("fontLinkInput");

  // On Enter or blur, process the input
  textarea.addEventListener("keydown", (event) => {
    if (event.key === "Enter" || event.key === "Escape") {
      event.preventDefault();
      injectFontLink();
      container?.classList.add("hidden");
    }
  });

  // Function to inject the pasted <link> tag into <head>
  function injectFontLink() {
    const input = textarea.value.trim();
    if (!input) return;

    // Parse the textarea HTML as a document
    const parser = new DOMParser();
    const doc = parser.parseFromString(input, "text/html");

    // Find the first <link> with rel="stylesheet" and href containing fonts.googleapis.com
    const fontLink = Array.from(
      doc.querySelectorAll('link[rel="stylesheet"]'),
    ).find((link) => link.href.includes("fonts.googleapis.com"));

    if (!fontLink) return;

    // Remove all existing <link> elements in <head>
    const existingLinks = document.head.querySelectorAll("link");
    existingLinks.forEach((link) => link.remove());

    // Clone and insert only the valid font <link>
    document.head.appendChild(fontLink.cloneNode(true));

    // Save the cleaned-up HTML to localStorage
    localStorage.setItem("googleFontLink", fontLink.outerHTML);

    // Apply the font
    injectFontLinkFromHTML(fontLink.outerHTML);
  }

  function injectFontLinkFromHTML(input) {
    if (!input) return;

    // Remove old Google Fonts links
    const existing = document.head.querySelectorAll('link[rel="stylesheet"]');
    for (const link of existing) {
      if (link.href.includes("fonts.googleapis.com")) {
        link.remove();
      }
    }

    // Insert new <link> tag
    document.head.insertAdjacentHTML("beforeend", input);

    // Extract href
    const hrefMatch = input.match(/href="([^"]+)"/);
    if (!hrefMatch) return;

    const href = hrefMatch[1];
    const familyMatch = href.match(/family=([^:&"]+)/);
    if (!familyMatch) return;

    const rawName = familyMatch[1];
    const fontName = rawName.replace(/\+/g, " ");

    // Apply font
    document.getElementById("cardContainer").style.fontFamily =
      `'${fontName}', sans-serif`;
  }
</script>
